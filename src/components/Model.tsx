/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/models/bicycle.gltf --transform --types --output Model.tsx
Files: public/models/bicycle.gltf [1.3MB] > bicycle-transformed.glb [1.83MB] (-41%)
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
    nodes: {
        Bike: THREE.Mesh
        B_Pneu: THREE.Mesh
    }
    materials: {
        PaletteMaterial001: THREE.MeshStandardMaterial
        PaletteMaterial002: THREE.MeshStandardMaterial
    }
}

export function Model(props: JSX.IntrinsicElements['group']) {
    const { nodes, materials } = useGLTF('/models/bicycle-transformed.glb') as GLTFResult;
    return (
        <group {...props} dispose={null}>
            <mesh geometry={nodes.Bike.geometry} material={materials.PaletteMaterial001} />
            <mesh geometry={nodes.B_Pneu.geometry} material={materials.PaletteMaterial002} position={[-1.047, -1.181, 0.005]} rotation={[Math.PI / 2, 0, 0]} scale={[0.792, 0.546, 0.792]} />
        </group>
    )
}

useGLTF.preload('/models/bicycle-transformed.glb');
